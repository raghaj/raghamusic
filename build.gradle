
buildscript {
    ext {
        springBootVersion = '2.0.0.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "http://repo1.uhc.com/artifactory" }
        maven { url 'https://plugins.gradle.org/m2' }
        maven { url 'https://jitpack.io' }
     }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:${artifactoryPluginVersion}"
    }
}


apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.jfrog.artifactory'


group = 'com.raghavi'
sourceCompatibility = 1.8
mainClassName = 'com.raghavi.Application'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
    compile('org.springframework.boot:spring-boot-starter-webflux')
    compile('org.springframework.security:spring-security-core')
    compile('org.springframework.security:spring-security-config')
/*    compile('org.springframework.security:spring-security-webflux')*/
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
    testCompile('io.projectreactor:reactor-test')
    //actuator
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")

    // spring
    compile("org.springframework.boot:spring-boot-starter-data-cassandra-reactive:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}") {
        exclude(group: "org.springframework.boot", module: "spring-boot-starter-logging")
    }
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}") {
        exclude(group: "org.springframework.boot", module: "spring-boot-starter-logging")
    }

}

